dnl -*- Autoconf -*-
dnl Copyright (C) 1993-2017 Free Software Foundation, Inc.
dnl This file is free software, distributed under the terms of the GNU
dnl General Public License as published by the Free Software Foundation;
dnl either version 2 of the License, or (at your option) any later version.
dnl As a special exception to the GNU General Public License, this file
dnl may be distributed as part of a program that contains a configuration
dnl script generated by Autoconf, under the same distribution terms as
dnl the rest of that program.

dnl From Bruno Haible, Marcus Daniels, Sam Steingold.

AC_PREREQ([2.57])

AC_DEFUN([CL_SHM_H],
[
  AC_BEFORE([$0], [CL_SHM_RMID])
  AC_CHECK_HEADERS([sys/shm.h])
  if test $ac_cv_header_sys_shm_h = yes; then
    AC_CHECK_HEADERS([sys/ipc.h])
  fi
])

AC_DEFUN([CL_SHM],
[
  AC_BEFORE([$0], [CL_SHM_RMID])
  AC_REQUIRE([CL_SHM_H])
  AC_REQUIRE([AC_CANONICAL_HOST])
  if test $ac_cv_header_sys_shm_h = yes -a "$ac_cv_header_sys_ipc_h" = yes; then
    # This test is from Marcus Daniels
    AC_CACHE_CHECK([for working shared memory], [cl_cv_sys_shm_works],
      [AC_TRY_RUN(
         [#include <stdlib.h>
          #include <sys/types.h>
          #include <sys/ipc.h>
          #include <sys/shm.h>
          /* try attaching a single segment to multiple addresses */
          #define segsize 0x10000
          #define attaches 128
          #define base_addr 0x01000000
          int main ()
          {
            int shmid;
            int i;
            char* addr;
            char* result;
            if ((shmid = shmget(IPC_PRIVATE,segsize,0400)) < 0)
              exit(1);
            for (i=0, addr = (char*)0x01000000; i<attaches; i++, addr += segsize)
              if ((result = (char*)shmat(shmid,addr,SHM_RDONLY)) == (char*)(-1))
                break;
            for (i=0, addr = (char*)0x01000000; i<attaches; i++, addr += segsize)
              shmdt(addr);
            shmctl(shmid,IPC_RMID,0);
            exit(result == (char*)(-1));
          }
         ],
         [cl_cv_sys_shm_works=yes],
         [cl_cv_sys_shm_works=no],
         [dnl When cross-compiling, guess yes on Linux (except on mips),
          dnl on Solaris, and on IRIX. Otherwise, don't assume anything.
          case "$host" in
            mips*-*-linux*) cl_cv_sys_shm_works="guessing no" ;;
            *-*-linux*)     cl_cv_sys_shm_works="guessing yes" ;;
            *-*-solaris*)   cl_cv_sys_shm_works="guessing yes" ;;
            *-*-irix*)      cl_cv_sys_shm_works="guessing yes" ;;
            *)              cl_cv_sys_shm_works="guessing no" ;;
          esac
         ])
      ])
  fi
  case "$cl_cv_sys_shm_works" in
    *yes)
      have_shm=1
      AC_DEFINE([HAVE_SHM],[],[have <sys/shm.h> and <sys/ipc.h> and shared memory works])
      AC_CHECK_HEADERS([sys/sysmacros.h])
      ;;
    *) ;;
  esac
])
